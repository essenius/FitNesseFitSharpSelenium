1.3.6.6  Initial commit in Git
1.3.6.7  Demo pages for local PhantomJS with authentication
1.3.6.8  Added CSV Comparison
1.3.6.9  Updated Selenium.Webdriver and Selenium.Support to version 3.4.
1.3.7.0  Added Chrome Headless, updated Click Element to wait until it is clickable first, 
         added javascript shim for PhantomJS so calls for alerts do not fail,
		 improved method for element detection, added method to wait for Javascript result (kudos to Sean Jost)
1.3.7.1  Updated Zones detection to use 4 locations, deprecated setting protected mode (too risky),
         fixed bug in ElementExists in case of browser None, increased test coverage of Sean's additions.
1.3.8.0  Introduced Model and Utilities namespaces, refactored BrowserDriver to eliminate static DesiredCapabilities calls,
         fixed a number of ReSharper findings, removed zone writing capability, increased unit test coverage for BrowserDriverFactory.
1.3.8.1  Fixed capatibility with updated Selenium version
1.3.8.2  Added capability to read JavaScript errors
         fixed a number of ReSharper findings, removed zone writing capability, increased unit test coverage for BrowserDriverFactory.
1.3.8.7  Added ability to send keys to the currently focused element
1.3.9.0  Updated Selenium Webdriver to version 3.8, deprecated NewRemoteBrowserAtAddressWithName and 
         SetRemoteBrowserAtAddressWithName due to the applicationName capability no longer working (W3C spec violation)
1.3.10.0 Introduced IntegratedAuthenticationDomain, DefaultSearchMethod, SearchDelimiter, Url, Driver, DriverId, DragElementAndDropOnElementInDriver.
         Refactored ExtendedTests. Upgraded WebDriver to 3.11
1.3.11.0 Took over Sean Jost's timeout mechanism for Firefox, added CommandTimeoutSeconds to parameterize that. Aligned standard command timeout to 60 seconds.
         Disabled NewRemoteBrowserAtAddressWithName and SetRemoteBrowserAtAddressWithName. Added ClickElementWithModifier, Increased code coverage to 95%.
		 Updated TestSite to enable higher coverage.
1.3.12.0 Upgrade to WebDriver 3.14, removed PhantomJS and HTMLUnit support as WebDriver (.Net) no longer supports them.
1.3.12.1 Bug fix in running JavaScript with plain parameters, and in Alert demo pages
1.3.12.2 Add use of ChromeWebDriver, GeckoWebDriver and IEWebDriver environment variables to enable running from Azure DevOps hosted agents
1.3.12.3 Added ClickElementIfVisible to handle cookie consent notifications (demo in TelerikTest)
1.3.13.0 Introduced check for Internet Explorer that screen scaling is at 100%. Fixed bugs in CreateLocalDriver and RemoveDriver that sometimes 
         left drivers running. Cleaned up a number of ReSharper findings.
2.0.0	 Adopting Semantic Versioning with 3 levels (for alignment with Universal Packages).
2.0.1    Introduced #{Selenium.DefaultBrowser}# variable for FixtureTestPageSuite
2.0.2	 Made fixture more resilient against StaleElementReferenceExceptions and fixed issue with ToCapabilities method of ChromeDriver not returning a 
         DesiredCapabilities under the hood in newer versions
2.1.0    Removed deprecated functions RestoreProtectedModes, SetProtectedModes, TakeScreenshot, TakeScreenshotTo, initial commit to GitHub
2.1.1	 Introduced [Documentation] attributes to replace FixtureDocumentation dictionary. Cleaned up code; merged Selenium_Text with Selenium_Page
2.2.0    Added ElementIsChecked; made AcceptAlert, DismissAlert and RespondToAlert return a bool, indicating success.
         Implemented a few test workarounds for apparent timing related flaws in the Edge browser (more to come).
2.3.0    Initial support for Appium tests; introduction of optional environment variables overruling App.Config settings. ReSharper cleanup.
2.4.0    Introduced Coordinate class to simplify specification of sizes. Introduced WindowSize replacing WindowHeight, WindowWidth, and
         SetWindowSizeX, made DragElementAndDropAt use Coordinate, renamed all HtmlSource functions to PageSource equivalents. 
		 Introduced WindowSizeIsCloseTo, to allow for some browsers not setting the exact size but one or two pixels off. 
		 Introduced ProtectedModesAre to replace ProtectedModeIsOff, ProtectedModeIsOn, ProtectedModesAreEqual.
2.4.1    Migrated to Roslyn based FxCop, fixed findings. Tweaked the Appium tests for predictability and documented emulator expectations.
2.4.2    Added Appium demo suite in the wiki, and fixed a wait issue with DragElementAndDropOnElement
2.4.3    Refactored BrowserDriver creation to use DriverCreator classes rather than one big factory. Added documentation tags for Coordinate, 
         and disabled native BrowserStorage tests as Chrome doesn't seem to support this anymore.
2.4.4	 Added Documentation tags for Coordinate	
2.4.5    Extracted a few methods, did some cleanup of comments and fixed a number of ReSharper findings
2.5.0    Enabled WinAppDriver with browser ID "WinApp". Added WindowPosition 
2.5.1    Made KeyParser case insensitive for the special keys (e.g. {Del} and {DEL} now both refer to the delete key).
         Added VersionIsAtLeast to assert that the current fixture has at least a minimal version. Fixed a bug in zone determination
2.5.2    Upgraded NuGet packages to latest versions (except Webdriver)
2.5.3    Replaced [Documentation] by standard XML documentation
2.6.0    Edge browser is now expected to be the Chromium version. Edge Headless is suppported as well. 
         Legacy Edge no longer works (it never worked well anyway). Cleaned up all exceptions that were needed for the legacy Edge.
         Fixed some issues in AppDriver tests (newer calculators work a bit differently). 
         Made tests for drivers that are not installed result in inconclusive tests rather than failed ones.
2.6.1    Handled changed exception behavior for scrollIntoView and enhanced test coverage a bit
3.0.0    Migration to .NET 5.0, refactored end to end tests for better observability, ugraded test site
3.1.0    Added CustomBy for By Content, By Label, By Partial Content and By Trial
3.1.1    Exception handling in CustomBy.FindElements to ignore missing elements
3.1.2    Made SearchParser default to 'trial'; fixed a few broken tests.
3.2.0    Eliminated (Windows specific) check for screen scaling (IE only, and didn't add much value).
         Eliminated _skippedTests in EndToEndTest and replaced by Debug.WriteLine().
         Eliminated SeleniumBaseTests; moved to Experiments and EndToEndTest.
3.2.1    Corrected API for *RemoteBrowserAtAddressWithCapabilities to use Dictionary<string,string> instead of <string,object>
         Made Scroll more robust on Android by introducing a 200 ms delay between press and move.
         Introduced Map fixture to make hash maps more convenient to enter.
3.2.2    Introduced DotNetWindowsRegisty to eliminate the need for Fakes (implements #7). Replaced trait Appium by Native.
3.2.3    Eliminated NativeBrowserStorage as no longer used.
3.3.0    Enabled Appium 2, introduced Set/NewBrowserWithOptions, NewOptionsFor, Set/NewRemoteBrowserAtAddressWithOptions,
         RemoteBrowserPath, made Edge path search for IE emulation smarter, cleaned up test site, added TableTestPage
4.0.0    Migrated to Selenium Webdriver 4 (WinApp no longer fully works - it's abandoned it seems)
4.1.0    Migrated to .Net 6
4.2.0    Migrated to WebDriver 4.16.2 and introduced JustClickElement to do a plain click (without move or wait)
4.2.1    Added Config fixture function and fixed several static analysis findings
4.2.2    Upgraded to WebDriver 4.19.1, MSTest 3.2.2, coverlet 6.0.2, Test SDK 17.9.0, moved some test to Integration category,
         accomodated new behavior of Firefox with local dates, fixed ReSharper findings
4.3.0	 Migrated to .NET 8, upgraded to WebDriver 4.23.0, MSTest 3.2.3, coverlet 6.0.2, Test SDK 17.9.0, fixed ReSharper findings
4.3.1    Upgraded Appium driver to 6.0.1, Selenium to 4.27, Microsoft.Extensions.Configuration to 9.0.0, fixed a number of ReSharper 
         and SonarLint findings, fixed a few Appium and Edge specific tests and made tests working with public sites pass again.